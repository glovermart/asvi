/* Generated by Yosys 0.27 (git sha1 5f88c218b, gcc 8.5.0 -fPIC -Os) */

(* is_interface =  1  *)
(* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:0.0-0.0" *)
module I(i_a, i_clk, o_a);
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  wire [7:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  (* force_downto = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:20.10-20.17|/hizz/pro/sig_research/dddTools/tools/yosys-0.27/bin/../share/yosys/techmap.v:270.23-270.24" *)
  wire [31:0] _264_;
  (* force_downto = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:20.10-20.17|/hizz/pro/sig_research/dddTools/tools/yosys-0.27/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [31:0] _265_;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:14.7-14.8" *)
  reg [31:0] i = 32'd0;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:7.17-7.20" *)
  input i_a;
  wire i_a;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:8.17-8.22" *)
  input i_clk;
  wire i_clk;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:9.24-9.27" *)
  output [7:0] o_a;
  wire [7:0] o_a;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:12.15-12.16" *)
  reg [7:0] x;
  assign _264_[0] = ~i[0];
  assign _247_ = ~(i[3] | i[2]);
  assign _248_ = i[1] | i[0];
  assign _249_ = _247_ & ~(_248_);
  assign _250_ = _249_ ^ i[4];
  assign _251_ = ~_250_;
  assign _252_ = _249_ & ~(i[4]);
  assign _253_ = _252_ ^ i[5];
  assign _254_ = _253_ ^ _250_;
  assign _255_ = ~i[6];
  assign _256_ = i[5] | i[4];
  assign _257_ = _256_ | ~(_249_);
  assign _258_ = _257_ ^ _255_;
  assign _259_ = _258_ ^ _250_;
  assign _260_ = _259_ | _254_;
  assign _261_ = _255_ & ~(_257_);
  assign _262_ = _261_ ^ i[7];
  assign _263_ = _262_ ^ _250_;
  assign _001_ = _263_ | _260_;
  assign _002_ = i[7] | i[6];
  assign _003_ = _002_ | _256_;
  assign _004_ = _249_ & ~(_003_);
  assign _005_ = _004_ ^ i[8];
  assign _006_ = _005_ ^ _250_;
  assign _007_ = _006_ | _001_;
  assign _008_ = _004_ & ~(i[8]);
  assign _009_ = _008_ ^ i[9];
  assign _010_ = _009_ ^ _250_;
  assign _011_ = _010_ | _007_;
  assign _012_ = ~i[10];
  assign _013_ = i[9] | i[8];
  assign _014_ = _013_ | ~(_004_);
  assign _015_ = _014_ ^ _012_;
  assign _016_ = _015_ ^ _250_;
  assign _017_ = _016_ | _011_;
  assign _018_ = _012_ & ~(_014_);
  assign _019_ = _018_ ^ i[11];
  assign _020_ = _019_ ^ _250_;
  assign _021_ = _020_ | _017_;
  assign _022_ = i[11] | i[10];
  assign _023_ = _022_ | _013_;
  assign _024_ = _004_ & ~(_023_);
  assign _025_ = _024_ ^ i[12];
  assign _026_ = _025_ ^ _250_;
  assign _027_ = _026_ | _021_;
  assign _028_ = _024_ & ~(i[12]);
  assign _029_ = _028_ ^ i[13];
  assign _030_ = _029_ ^ _250_;
  assign _031_ = _030_ | _027_;
  assign _032_ = i[13] | i[12];
  assign _033_ = _024_ & ~(_032_);
  assign _034_ = _033_ ^ i[14];
  assign _035_ = _034_ ^ _250_;
  assign _036_ = _035_ | _031_;
  assign _037_ = _033_ & ~(i[14]);
  assign _038_ = _037_ ^ i[15];
  assign _039_ = _038_ ^ _250_;
  assign _040_ = _039_ | _036_;
  assign _041_ = i[15] | i[14];
  assign _042_ = _041_ | _032_;
  assign _043_ = _042_ | _023_;
  assign _044_ = _004_ & ~(_043_);
  assign _045_ = _044_ ^ i[16];
  assign _046_ = _045_ ^ _250_;
  assign _047_ = _046_ | _040_;
  assign _048_ = _044_ & ~(i[16]);
  assign _049_ = _048_ ^ i[17];
  assign _050_ = _049_ ^ _250_;
  assign _051_ = _050_ | _047_;
  assign _052_ = i[17] | i[16];
  assign _053_ = _044_ & ~(_052_);
  assign _054_ = _053_ ^ i[18];
  assign _055_ = _054_ ^ _250_;
  assign _056_ = _055_ | _051_;
  assign _057_ = _053_ & ~(i[18]);
  assign _058_ = _057_ ^ i[19];
  assign _059_ = _058_ ^ _250_;
  assign _060_ = _059_ | _056_;
  assign _061_ = i[19] | i[18];
  assign _062_ = _061_ | _052_;
  assign _063_ = _044_ & ~(_062_);
  assign _064_ = _063_ ^ i[20];
  assign _065_ = _064_ ^ _250_;
  assign _066_ = _065_ | _060_;
  assign _067_ = _063_ & ~(i[20]);
  assign _068_ = _067_ ^ i[21];
  assign _069_ = _068_ ^ _250_;
  assign _070_ = _069_ | _066_;
  assign _071_ = i[21] | i[20];
  assign _072_ = _063_ & ~(_071_);
  assign _073_ = _072_ ^ i[22];
  assign _074_ = _073_ ^ _250_;
  assign _075_ = _074_ | _070_;
  assign _076_ = _072_ & ~(i[22]);
  assign _077_ = _076_ ^ i[23];
  assign _078_ = _077_ ^ _250_;
  assign _079_ = _078_ | _075_;
  assign _080_ = i[23] | i[22];
  assign _081_ = _080_ | _071_;
  assign _082_ = _081_ | _062_;
  assign _083_ = _044_ & ~(_082_);
  assign _084_ = _083_ ^ i[24];
  assign _085_ = _084_ ^ _250_;
  assign _086_ = _085_ | _079_;
  assign _087_ = _083_ & ~(i[24]);
  assign _088_ = _087_ ^ i[25];
  assign _089_ = _088_ ^ _250_;
  assign _090_ = _089_ | _086_;
  assign _091_ = i[25] | i[24];
  assign _092_ = _083_ & ~(_091_);
  assign _093_ = _092_ ^ i[26];
  assign _094_ = _093_ ^ _250_;
  assign _095_ = _094_ | _090_;
  assign _096_ = _092_ & ~(i[26]);
  assign _097_ = _096_ ^ i[27];
  assign _098_ = _097_ ^ _250_;
  assign _099_ = _098_ | _095_;
  assign _100_ = i[27] | i[26];
  assign _101_ = _100_ | _091_;
  assign _102_ = _083_ & ~(_101_);
  assign _103_ = _102_ ^ i[28];
  assign _104_ = _103_ ^ _250_;
  assign _105_ = _104_ | _099_;
  assign _106_ = _102_ & ~(i[28]);
  assign _107_ = _106_ ^ i[29];
  assign _108_ = _107_ ^ _250_;
  assign _109_ = _108_ | _105_;
  assign _110_ = i[29] | i[28];
  assign _111_ = _102_ & ~(_110_);
  assign _112_ = _111_ ^ i[30];
  assign _113_ = _112_ ^ _250_;
  assign _114_ = _113_ | _109_;
  assign _115_ = _111_ & ~(i[30]);
  assign _116_ = _115_ ^ i[31];
  assign _117_ = _116_ ^ _250_;
  assign _118_ = _117_ | _114_;
  assign _119_ = i[31] | i[30];
  assign _120_ = _119_ | _110_;
  assign _121_ = _120_ | _101_;
  assign _122_ = _121_ | _082_;
  assign _123_ = _044_ & ~(_122_);
  assign _124_ = _123_ ^ i[31];
  assign _125_ = _124_ ^ _250_;
  assign _126_ = _125_ | _118_;
  assign _127_ = _126_ | _251_;
  assign _128_ = _264_[0] & ~(_127_);
  assign _129_ = ~(i[1] ^ i[0]);
  assign _265_[1] = ~_129_;
  assign _130_ = _128_ & ~(_265_[1]);
  assign _131_ = ~i[2];
  assign _132_ = _248_ ^ _131_;
  assign _133_ = ~_132_;
  assign _134_ = _130_ & ~(_133_);
  assign _135_ = _131_ & ~(_248_);
  assign _136_ = _135_ ^ i[3];
  assign _137_ = ~_136_;
  assign _138_ = _134_ & ~(_137_);
  assign _139_ = x[0] & ~(_138_);
  assign _140_ = _126_ | ~(i_a);
  assign _141_ = _140_ | _251_;
  assign _142_ = _141_ | i[0];
  assign _143_ = _142_ | _265_[1];
  assign _144_ = _143_ | _133_;
  assign _145_ = _136_ & ~(_144_);
  assign _000_[0] = _145_ | _139_;
  assign _146_ = _126_ | _250_;
  assign _147_ = _146_ | _264_[0];
  assign _148_ = _147_ | _129_;
  assign _149_ = _148_ | _132_;
  assign _150_ = _137_ & ~(_149_);
  assign _151_ = x[1] & ~(_150_);
  assign _152_ = _140_ | _250_;
  assign _153_ = _152_ | _264_[0];
  assign _154_ = _153_ | _129_;
  assign _155_ = _154_ | _132_;
  assign _156_ = _137_ & ~(_155_);
  assign _000_[1] = _156_ | _151_;
  assign _157_ = _146_ | i[0];
  assign _158_ = _157_ | _129_;
  assign _159_ = _158_ | _132_;
  assign _160_ = _137_ & ~(_159_);
  assign _161_ = x[2] & ~(_160_);
  assign _162_ = _152_ | i[0];
  assign _163_ = _162_ | _129_;
  assign _164_ = _163_ | _132_;
  assign _165_ = _137_ & ~(_164_);
  assign _000_[2] = _165_ | _161_;
  assign _166_ = _147_ | _265_[1];
  assign _167_ = _166_ | _132_;
  assign _168_ = _137_ & ~(_167_);
  assign _169_ = x[3] & ~(_168_);
  assign _170_ = _153_ | _265_[1];
  assign _171_ = _170_ | _132_;
  assign _172_ = _137_ & ~(_171_);
  assign _000_[3] = _172_ | _169_;
  assign _173_ = _157_ | _265_[1];
  assign _174_ = _173_ | _132_;
  assign _175_ = _137_ & ~(_174_);
  assign _176_ = x[4] & ~(_175_);
  assign _177_ = _162_ | _265_[1];
  assign _178_ = _177_ | _132_;
  assign _179_ = _137_ & ~(_178_);
  assign _000_[4] = _179_ | _176_;
  assign _180_ = _148_ | _133_;
  assign _181_ = _137_ & ~(_180_);
  assign _182_ = x[5] & ~(_181_);
  assign _183_ = _154_ | _133_;
  assign _184_ = _137_ & ~(_183_);
  assign _000_[5] = _184_ | _182_;
  assign _185_ = _158_ | _133_;
  assign _186_ = _137_ & ~(_185_);
  assign _187_ = x[6] & ~(_186_);
  assign _188_ = _163_ | _133_;
  assign _189_ = _137_ & ~(_188_);
  assign _000_[6] = _189_ | _187_;
  assign _190_ = _166_ | _133_;
  assign _191_ = _137_ & ~(_190_);
  assign _192_ = x[7] & ~(_191_);
  assign _193_ = _170_ | _133_;
  assign _194_ = _137_ & ~(_193_);
  assign _000_[7] = _194_ | _192_;
  assign _195_ = i[1] & i[0];
  assign _265_[2] = _195_ ^ i[2];
  assign _196_ = _195_ & ~(_131_);
  assign _265_[3] = _196_ ^ i[3];
  assign _197_ = ~(i[3] & i[2]);
  assign _198_ = _195_ & ~(_197_);
  assign _265_[4] = _198_ ^ i[4];
  assign _199_ = _198_ & i[4];
  assign _265_[5] = _199_ ^ i[5];
  assign _200_ = ~(i[5] & i[4]);
  assign _201_ = _198_ & ~(_200_);
  assign _265_[6] = _201_ ^ i[6];
  assign _202_ = _201_ & ~(_255_);
  assign _265_[7] = _202_ ^ i[7];
  assign _203_ = ~(i[7] & i[6]);
  assign _204_ = _203_ | _200_;
  assign _205_ = _198_ & ~(_204_);
  assign _265_[8] = _205_ ^ i[8];
  assign _206_ = _205_ & i[8];
  assign _265_[9] = _206_ ^ i[9];
  assign _207_ = ~(i[9] & i[8]);
  assign _208_ = _205_ & ~(_207_);
  assign _265_[10] = _208_ ^ i[10];
  assign _209_ = _208_ & ~(_012_);
  assign _265_[11] = _209_ ^ i[11];
  assign _210_ = ~(i[11] & i[10]);
  assign _211_ = _210_ | _207_;
  assign _212_ = _205_ & ~(_211_);
  assign _265_[12] = _212_ ^ i[12];
  assign _213_ = _212_ & i[12];
  assign _265_[13] = _213_ ^ i[13];
  assign _214_ = ~(i[13] & i[12]);
  assign _215_ = _212_ & ~(_214_);
  assign _265_[14] = _215_ ^ i[14];
  assign _216_ = _215_ & i[14];
  assign _265_[15] = _216_ ^ i[15];
  assign _217_ = ~(i[15] & i[14]);
  assign _218_ = _217_ | _214_;
  assign _219_ = _218_ | _211_;
  assign _220_ = _205_ & ~(_219_);
  assign _265_[16] = _220_ ^ i[16];
  assign _221_ = _220_ & i[16];
  assign _265_[17] = _221_ ^ i[17];
  assign _222_ = ~(i[17] & i[16]);
  assign _223_ = _220_ & ~(_222_);
  assign _265_[18] = _223_ ^ i[18];
  assign _224_ = _223_ & i[18];
  assign _265_[19] = _224_ ^ i[19];
  assign _225_ = ~(i[19] & i[18]);
  assign _226_ = _225_ | _222_;
  assign _227_ = _220_ & ~(_226_);
  assign _265_[20] = _227_ ^ i[20];
  assign _228_ = _227_ & i[20];
  assign _265_[21] = _228_ ^ i[21];
  assign _229_ = ~(i[21] & i[20]);
  assign _230_ = _227_ & ~(_229_);
  assign _265_[22] = _230_ ^ i[22];
  assign _231_ = _230_ & i[22];
  assign _265_[23] = _231_ ^ i[23];
  assign _232_ = ~(i[23] & i[22]);
  assign _233_ = _232_ | _229_;
  assign _234_ = _233_ | _226_;
  assign _235_ = _220_ & ~(_234_);
  assign _265_[24] = _235_ ^ i[24];
  assign _236_ = _235_ & i[24];
  assign _265_[25] = _236_ ^ i[25];
  assign _237_ = ~(i[25] & i[24]);
  assign _238_ = _235_ & ~(_237_);
  assign _265_[26] = _238_ ^ i[26];
  assign _239_ = _238_ & i[26];
  assign _265_[27] = _239_ ^ i[27];
  assign _240_ = ~(i[27] & i[26]);
  assign _241_ = _240_ | _237_;
  assign _242_ = _235_ & ~(_241_);
  assign _265_[28] = _242_ ^ i[28];
  assign _243_ = _242_ & i[28];
  assign _265_[29] = _243_ ^ i[29];
  assign _244_ = ~(i[29] & i[28]);
  assign _245_ = _242_ & ~(_244_);
  assign _265_[30] = _245_ ^ i[30];
  assign _246_ = _245_ & i[30];
  assign _265_[31] = _246_ ^ i[31];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[0] <= _264_[0];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[1] <= _265_[1];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[2] <= _265_[2];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[3] <= _265_[3];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[4] <= _265_[4];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[5] <= _265_[5];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[6] <= _265_[6];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[7] <= _265_[7];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[8] <= _265_[8];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[9] <= _265_[9];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[10] <= _265_[10];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[11] <= _265_[11];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[12] <= _265_[12];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[13] <= _265_[13];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[14] <= _265_[14];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[15] <= _265_[15];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[16] <= _265_[16];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[17] <= _265_[17];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[18] <= _265_[18];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[19] <= _265_[19];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[20] <= _265_[20];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[21] <= _265_[21];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[22] <= _265_[22];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[23] <= _265_[23];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[24] <= _265_[24];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[25] <= _265_[25];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[26] <= _265_[26];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[27] <= _265_[27];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[28] <= _265_[28];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[29] <= _265_[29];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[30] <= _265_[30];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:19.3-20.18" *)
  always @(posedge i_clk)
    i[31] <= _265_[31];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[0] <= _000_[0];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[1] <= _000_[1];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[2] <= _000_[2];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[3] <= _000_[3];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[4] <= _000_[4];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[5] <= _000_[5];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[6] <= _000_[6];
  (* \always_ff  = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:16.3-17.17" *)
  always @(posedge i_clk)
    x[7] <= _000_[7];
  assign _264_[31:1] = i[31:1];
  assign _265_[0] = _264_[0];
  assign o_a = x;
endmodule

(* top =  1  *)
(* interfaces_replaced_in_module =  1  *)
(* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:27.1-39.10" *)
module top(i_a, i_clk, o_a);
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:28.17-28.20" *)
  input i_a;
  wire i_a;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:29.17-29.22" *)
  input i_clk;
  wire i_clk;
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:30.24-30.27" *)
  output [7:0] o_a;
  wire [7:0] o_a;
  (* is_interface = 32'd1 *)
  (* src = "testcases/alwaysff_packed_svi_dotnamePortCon.sv:33.5-37.6" *)
  I u_I (
    .i_a(i_a),
    .i_clk(i_clk),
    .o_a(o_a)
  );
endmodule
