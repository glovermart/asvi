[93mWarning[97m: Config file '.svlint.toml' is not found. Enable all rules(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:2:1
[94m  |
[94m2 |[37m // NOTE: Lines 8 to 14 and 112 to 119. 
[94m  |[93m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[93m hint  : Remove trailing whitespace.
[94m  |[33m                                        [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:4:1
[94m  |
[94m4 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m          [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:4:1
[94m  |
[94m4 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Prefix `interface` identifier with "ifc_".
[94m  |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:4:1
[94m  |
[94m4 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:4:1
[94m  |
[94m4 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:4:11
[94m  |
[94m4 |[37m interface I;
[94m  |[93m           ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m  |[33m            [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_modport
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:16:3
[94m   |
[94m16 |[37m   modport P
[94m   |[93m   ^^^^^^^[93m hint  : Use a modport identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_modport
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:16:3
[94m   |
[94m16 |[37m   modport P
[94m   |[93m   ^^^^^^^[93m hint  : Use a modport identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:29:1
[94m   |
[94m29 |[37m module M1
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:29:1
[94m   |
[94m29 |[37m module M1
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:29:1
[94m   |
[94m29 |[37m module M1
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:29:1
[94m   |
[94m29 |[37m module M1
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:29:8
[94m   |
[94m29 |[37m module M1
[94m   |[93m        ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:30:5
[94m   |
[94m30 |[37m   ( I.P p
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:30:9
[94m   |
[94m30 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:30:9
[94m   |
[94m30 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:32:0
[94m   |
[94m32 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: re_forbidden_localparam
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:33:18
[94m   |
[94m33 |[37m   localparam bit Z = 1'b0;
[94m   |[93m                  ^[93m hint  : Use a localparam identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:34:0
[94m   |
[94m34 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:43:1
[94m   |
[94m43 |[37m module M2
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:43:1
[94m   |
[94m43 |[37m module M2
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:43:1
[94m   |
[94m43 |[37m module M2
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:43:1
[94m   |
[94m43 |[37m module M2
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:43:8
[94m   |
[94m43 |[37m module M2
[94m   |[93m        ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:44:5
[94m   |
[94m44 |[37m   ( I.P p
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:44:9
[94m   |
[94m44 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:44:9
[94m   |
[94m44 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:46:0
[94m   |
[94m46 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: re_forbidden_localparam
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:47:18
[94m   |
[94m47 |[37m   localparam bit Z = 1'b0;
[94m   |[93m                  ^[93m hint  : Use a localparam identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:48:0
[94m   |
[94m48 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:49:3
[94m   |
[94m49 |[37m   M1 u_M1 
[94m   |[93m   ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m     [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:49:6
[94m   |
[94m49 |[37m   M1 u_M1 
[94m   |[93m      ^^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:49:6
[94m   |
[94m49 |[37m   M1 u_M1 
[94m   |[93m      ^^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:50:0
[94m   |
[94m50 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:52:0
[94m   |
[94m52 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:55:5
[94m   |
[94m55 |[37m     if (p.i_srst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:60:3
[94m   |
[94m60 |[37m   if (p.i_srst)
[94m   |[93m   ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m     [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:65:5
[94m   |
[94m65 |[37m     if (p.i_srst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:73:1
[94m   |
[94m73 |[37m module M3
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:73:1
[94m   |
[94m73 |[37m module M3
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:73:1
[94m   |
[94m73 |[37m module M3
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:73:1
[94m   |
[94m73 |[37m module M3
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:73:8
[94m   |
[94m73 |[37m module M3
[94m   |[93m        ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:74:5
[94m   |
[94m74 |[37m   ( I.P p
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:74:9
[94m   |
[94m74 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:74:9
[94m   |
[94m74 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:76:0
[94m   |
[94m76 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: re_forbidden_localparam
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:77:18
[94m   |
[94m77 |[37m   localparam bit Z = 1'b1;
[94m   |[93m                  ^[93m hint  : Use a localparam identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:78:0
[94m   |
[94m78 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:79:3
[94m   |
[94m79 |[37m   M2 u_M2 
[94m   |[93m   ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m     [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:79:6
[94m   |
[94m79 |[37m   M2 u_M2 
[94m   |[93m      ^^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:79:6
[94m   |
[94m79 |[37m   M2 u_M2 
[94m   |[93m      ^^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:80:0
[94m   |
[94m80 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:82:0
[94m   |
[94m82 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:85:5
[94m   |
[94m85 |[37m     if (p.i_arst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: style_indent
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:87:0
[94m   |
[94m87 |[37m 
[94m   |[93m [93m hint  : Follow each newline with an integer multiple of 2 spaces.
[94m   |[33m [33m reason: Consistent indentation is essential for readability.
(B[m
[91mFail[97m: style_indent
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:88:0
[94m   |
[94m88 |[37m 
[94m   |[93m [93m hint  : Follow each newline with an integer multiple of 2 spaces.
[94m   |[33m [33m reason: Consistent indentation is essential for readability.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:90:5
[94m   |
[94m90 |[37m     if (p.i_arst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:95:5
[94m   |
[94m95 |[37m     if (p.i_arst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:103:1
[94m    |
[94m103 |[37m module top
[94m    |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m    |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:103:1
[94m    |
[94m103 |[37m module top
[94m    |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m    |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:103:1
[94m    |
[94m103 |[37m module top
[94m    |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: uppercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:103:8
[94m    |
[94m103 |[37m module top
[94m    |[93m        ^^^[93m hint  : Begin `module` name with UpperCamelCase.
[94m    |[33m           [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:104:5
[94m    |
[94m104 |[37m   ( input logic i_clk
[94m    |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m    |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:104:17
[94m    |
[94m104 |[37m   ( input logic i_clk
[94m    |[93m                 ^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m                      [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:105:5
[94m    |
[94m105 |[37m   , input logic i_srst
[94m    |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m    |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:105:17
[94m    |
[94m105 |[37m   , input logic i_srst
[94m    |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:106:5
[94m    |
[94m106 |[37m   , input logic i_arst
[94m    |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m    |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:106:17
[94m    |
[94m106 |[37m   , input logic i_arst
[94m    |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:107:5
[94m    |
[94m107 |[37m   , output logic z
[94m    |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m    |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: prefix_output
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:107:5
[94m    |
[94m107 |[37m   , output logic z
[94m    |[93m     ^^^^^^[93m hint  : Prefix `output` port identifier with "o_".
[94m    |[33m           [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:107:18
[94m    |
[94m107 |[37m   , output logic z
[94m    |[93m                  ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:108:5
[94m    |
[94m108 |[37m   , output logic y
[94m    |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m    |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: prefix_output
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:108:5
[94m    |
[94m108 |[37m   , output logic y
[94m    |[93m     ^^^^^^[93m hint  : Prefix `output` port identifier with "o_".
[94m    |[33m           [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:108:18
[94m    |
[94m108 |[37m   , output logic y
[94m    |[93m                  ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:109:5
[94m    |
[94m109 |[37m   , output logic x
[94m    |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m    |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: prefix_output
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:109:5
[94m    |
[94m109 |[37m   , output logic x
[94m    |[93m     ^^^^^^[93m hint  : Prefix `output` port identifier with "o_".
[94m    |[33m           [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:109:18
[94m    |
[94m109 |[37m   , output logic x
[94m    |[93m                  ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:112:3
[94m    |
[94m112 |[37m   I u_I 
[94m    |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m    |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:112:5
[94m    |
[94m112 |[37m   I u_I 
[94m    |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:112:5
[94m    |
[94m112 |[37m   I u_I 
[94m    |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m    |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:113:0
[94m    |
[94m113 |[37m 
[94m    |[93m [93m hint  : Remove trailing whitespace.
[94m    |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:120:0
[94m    |
[94m120 |[37m 
[94m    |[93m [93m hint  : Remove trailing whitespace.
[94m    |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:121:3
[94m    |
[94m121 |[37m   M2 u_M2
[94m    |[93m   ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m    |[33m     [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:121:6
[94m    |
[94m121 |[37m   M2 u_M2
[94m    |[93m      ^^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:121:6
[94m    |
[94m121 |[37m   M2 u_M2
[94m    |[93m      ^^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m    |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:125:3
[94m    |
[94m125 |[37m   M3 u_M3
[94m    |[93m   ^^[93m hint  : Begin `module` name with lowerCamelCase.
[94m    |[33m     [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:125:6
[94m    |
[94m125 |[37m   M3 u_M3
[94m    |[93m      ^^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m    |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwaysff_misc_port_signalsInInterfaceDefinition.sv:125:6
[94m    |
[94m125 |[37m   M3 u_M3
[94m    |[93m      ^^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m    |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
FAILURE
