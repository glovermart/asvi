[93mWarning[97m: Config file '.svlint.toml' is not found. Enable all rules(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:5:1
[94m  |
[94m5 |[37m localparam int SIZE = 8;
[94m  |[93m ^^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m           [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: re_forbidden_localparam
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:5:16
[94m  |
[94m5 |[37m localparam int SIZE = 8;
[94m  |[93m                ^^^^[93m hint  : Use a localparam identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m                    [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m          [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Prefix `interface` identifier with "ifc_".
[94m  |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:8:11
[94m  |
[94m8 |[37m interface I;
[94m  |[93m           ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m  |[33m            [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:15:1
[94m   |
[94m15 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:15:1
[94m   |
[94m15 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:15:1
[94m   |
[94m15 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: uppercamelcase_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:15:8
[94m   |
[94m15 |[37m module top
[94m   |[93m        ^^^[93m hint  : Begin `module` name with UpperCamelCase.
[94m   |[33m           [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:16:5
[94m   |
[94m16 |[37m   ( input logic en
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: prefix_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:16:5
[94m   |
[94m16 |[37m   ( input logic en
[94m   |[93m     ^^^^^[93m hint  : Prefix `input` port identifier with "i_".
[94m   |[33m          [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:16:17
[94m   |
[94m16 |[37m   ( input logic en
[94m   |[93m                 ^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:17:5
[94m   |
[94m17 |[37m   , input logic i_arst
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:17:17
[94m   |
[94m17 |[37m   , input logic i_arst
[94m   |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:18:5
[94m   |
[94m18 |[37m   , output logic [SIZE-1:0]o_a 
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:18:28
[94m   |
[94m18 |[37m   , output logic [SIZE-1:0]o_a 
[94m   |[93m                            ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                               [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:19:0
[94m   |
[94m19 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:20:0
[94m   |
[94m20 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:21:3
[94m   |
[94m21 |[37m   I u_I [SIZE-1:0] ();
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:21:5
[94m   |
[94m21 |[37m   I u_I [SIZE-1:0] ();
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:21:5
[94m   |
[94m21 |[37m   I u_I [SIZE-1:0] ();
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:22:0
[94m   |
[94m22 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:24:0
[94m   |
[94m24 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:27:10
[94m   |
[94m27 |[37m   genvar i;
[94m   |[93m          ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m           [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: generate_for_with_label
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:28:3
[94m   |
[94m28 |[37m   for(i =0; i< SIZE;i++) begin 
[94m   |[93m   ^^^[93m hint  : Use a label with prefix "l_" on loop generate block.
[94m   |[33m      [33m reason: Unnamed generate blocks imply unintuitive hierarchical paths.
(B[m
[91mFail[97m: keyword_required_generate
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:28:3
[94m   |
[94m28 |[37m   for(i =0; i< SIZE;i++) begin 
[94m   |[93m   ^^^[93m hint  : Use `generate`/`endgenerate` keywords to define generate regions.
[94m   |[33m      [33m reason: Omitting `generate`/`endgenerate` keywords may cause issues with non-compliant tools.
(B[m
[91mFail[97m: style_keyword_1space
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:28:3
[94m   |
[94m28 |[37m   for(i =0; i< SIZE;i++) begin 
[94m   |[93m   ^^^[93m hint  : Follow keyword with exactly 1 space.
[94m   |[33m      [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: genvar_declaration_in_loop
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:28:7
[94m   |
[94m28 |[37m   for(i =0; i< SIZE;i++) begin 
[94m   |[93m       ^[93m hint  : Declare `genvar` inside a loop generate construct.
[94m   |[33m        [33m reason: Minimized `genvar` scope makes code easier to read and review.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:28:7
[94m   |
[94m28 |[37m   for(i =0; i< SIZE;i++) begin 
[94m   |[93m       ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_keyword_maybelabel
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:28:26
[94m   |
[94m28 |[37m   for(i =0; i< SIZE;i++) begin 
[94m   |[93m                          ^^^^^[93m hint  : Follow keyword with a colon, newline, or exactly 1 space plus comment.
[94m   |[33m                               [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:29:0
[94m   |
[94m29 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_keyword_construct
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:31:5
[94m   |
[94m31 |[37m     always_latch  u_I[i].x <= a;
[94m   |[93m     ^^^^^^^^^^^^[93m hint  : Follow keyword with a newline or exactly 1 space.
[94m   |[33m                 [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: sequential_block_in_always_latch
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:32:18
[94m   |
[94m32 |[37m     always_latch begin
[94m   |[93m                  ^^^^^[93m hint  : Keywords `begin` and `end` are forbidden within `always_latch`.
[94m   |[33m                       [33m reason: Sequential blocks within `always_latch` may encourage overly-complex code.
(B[m
[91mFail[97m: explicit_if_else
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:33:7
[94m   |
[94m33 |[37m       if (!i_arst) //Vary output during simulation, may be omitted.
[94m   |[93m       ^^[93m hint  : Add an `else` clause to the `if` statement.
[94m   |[33m         [33m reason: Fully-specified conditional clarifies design intent.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:33:7
[94m   |
[94m33 |[37m       if (!i_arst) //Vary output during simulation, may be omitted.
[94m   |[93m       ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m         [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:35:0
[94m   |
[94m35 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_inst_assignOutput.sv:41:21
[94m   |
[94m41 |[37m   assign o_a = a_a; // Copy output 
[94m   |[93m                     ^^^^^^^^^^^^^^^[93m hint  : Remove trailing whitespace.
[94m   |[33m                                    [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
FAILURE
