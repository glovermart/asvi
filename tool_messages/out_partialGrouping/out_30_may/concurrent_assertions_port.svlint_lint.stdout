[93mWarning[97m: Config file '.svlint.toml' is not found. Enable all rules(B[m
[91mFail[97m: style_indent
[94m   -->[37m testcases/concurrent_assertions_port.sv:1:1
[94m  |
[94m1 |[37m /* Concurrent assertion experiment;
[94m  |[93m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[93m hint  : Follow each newline with an integer multiple of 2 spaces.
[94m  |[33m                                    [33m reason: Consistent indentation is essential for readability.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/concurrent_assertions_port.sv:5:1
[94m  |
[94m5 |[37m /* This testcase is modified from "Who Put Assertions In My RTL Code? And Why?
[94m  |[93m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[93m hint  : Remove trailing whitespace.
[94m  |[33m                                                                               [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/concurrent_assertions_port.sv:9:1
[94m  |
[94m9 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m          [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_interface
[94m   -->[37m testcases/concurrent_assertions_port.sv:9:1
[94m  |
[94m9 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Prefix `interface` identifier with "ifc_".
[94m  |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_interface
[94m   -->[37m testcases/concurrent_assertions_port.sv:9:1
[94m  |
[94m9 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_interface
[94m   -->[37m testcases/concurrent_assertions_port.sv:9:1
[94m  |
[94m9 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/concurrent_assertions_port.sv:9:11
[94m  |
[94m9 |[37m interface I
[94m  |[93m           ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m  |[33m            [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_modport
[94m   -->[37m testcases/concurrent_assertions_port.sv:14:3
[94m   |
[94m14 |[37m   modport P
[94m   |[93m   ^^^^^^^[93m hint  : Use a modport identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_modport
[94m   -->[37m testcases/concurrent_assertions_port.sv:14:3
[94m   |
[94m14 |[37m   modport P
[94m   |[93m   ^^^^^^^[93m hint  : Use a modport identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/concurrent_assertions_port.sv:22:1
[94m   |
[94m22 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/concurrent_assertions_port.sv:22:1
[94m   |
[94m22 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/concurrent_assertions_port.sv:22:1
[94m   |
[94m22 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/concurrent_assertions_port.sv:22:1
[94m   |
[94m22 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/concurrent_assertions_port.sv:22:8
[94m   |
[94m22 |[37m module M
[94m   |[93m        ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m         [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/concurrent_assertions_port.sv:23:5
[94m   |
[94m23 |[37m   ( I.P p
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/concurrent_assertions_port.sv:23:9
[94m   |
[94m23 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/concurrent_assertions_port.sv:23:9
[94m   |
[94m23 |[37m   ( I.P p
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/concurrent_assertions_port.sv:24:5
[94m   |
[94m24 |[37m   , output logic [3:0] o_q
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/concurrent_assertions_port.sv:24:24
[94m   |
[94m24 |[37m   , output logic [3:0] o_q
[94m   |[93m                        ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                           [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: sequential_block_in_always_ff
[94m   -->[37m testcases/concurrent_assertions_port.sv:27:32
[94m   |
[94m27 |[37m   always_ff @(posedge p.i_clk) begin
[94m   |[93m                                ^^^^^[93m hint  : Keywords `begin` and `end` are forbidden within `always_ff`.
[94m   |[33m                                     [33m reason: Sequential blocks within `always_ff` may encourage overly-complex code.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/concurrent_assertions_port.sv:40:1
[94m   |
[94m40 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/concurrent_assertions_port.sv:40:1
[94m   |
[94m40 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/concurrent_assertions_port.sv:40:1
[94m   |
[94m40 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: uppercamelcase_module
[94m   -->[37m testcases/concurrent_assertions_port.sv:40:8
[94m   |
[94m40 |[37m module top
[94m   |[93m        ^^^[93m hint  : Begin `module` name with UpperCamelCase.
[94m   |[33m           [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/concurrent_assertions_port.sv:41:5
[94m   |
[94m41 |[37m   ( output logic [3:0] o_q
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/concurrent_assertions_port.sv:41:24
[94m   |
[94m41 |[37m   ( output logic [3:0] o_q
[94m   |[93m                        ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                           [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/concurrent_assertions_port.sv:42:5
[94m   |
[94m42 |[37m   , input logic i_clk
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/concurrent_assertions_port.sv:42:17
[94m   |
[94m42 |[37m   , input logic i_clk
[94m   |[93m                 ^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                      [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/concurrent_assertions_port.sv:43:5
[94m   |
[94m43 |[37m   , input logic i_srst
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/concurrent_assertions_port.sv:43:17
[94m   |
[94m43 |[37m   , input logic i_srst
[94m   |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/concurrent_assertions_port.sv:46:3
[94m   |
[94m46 |[37m   I u_I
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/concurrent_assertions_port.sv:46:5
[94m   |
[94m46 |[37m   I u_I
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/concurrent_assertions_port.sv:46:5
[94m   |
[94m46 |[37m   I u_I
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/concurrent_assertions_port.sv:50:3
[94m   |
[94m50 |[37m   M u_M
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/concurrent_assertions_port.sv:50:5
[94m   |
[94m50 |[37m   M u_M
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/concurrent_assertions_port.sv:50:5
[94m   |
[94m50 |[37m   M u_M
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
FAILURE
