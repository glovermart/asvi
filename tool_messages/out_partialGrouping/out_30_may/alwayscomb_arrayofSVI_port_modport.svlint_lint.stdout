[93mWarning[97m: Config file '.svlint.toml' is not found. Enable all rules(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:5:1
[94m  |
[94m5 |[37m localparam int SIZE = 8;
[94m  |[93m ^^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m           [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: re_forbidden_localparam
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:5:16
[94m  |
[94m5 |[37m localparam int SIZE = 8;
[94m  |[93m                ^^^^[93m hint  : Use a localparam identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m                    [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m          [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_interface
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Prefix `interface` identifier with "ifc_".
[94m  |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_interface
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_interface
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:8:1
[94m  |
[94m8 |[37m interface I;
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:8:11
[94m  |
[94m8 |[37m interface I;
[94m  |[93m           ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m  |[33m            [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_modport
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:14:3
[94m   |
[94m14 |[37m   modport P 
[94m   |[93m   ^^^^^^^[93m hint  : Use a modport identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_modport
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:14:3
[94m   |
[94m14 |[37m   modport P 
[94m   |[93m   ^^^^^^^[93m hint  : Use a modport identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:15:0
[94m   |
[94m15 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:23:1
[94m   |
[94m23 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:23:1
[94m   |
[94m23 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:23:1
[94m   |
[94m23 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:23:1
[94m   |
[94m23 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:23:8
[94m   |
[94m23 |[37m module M
[94m   |[93m        ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m         [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:24:5
[94m   |
[94m24 |[37m   ( I.P p [SIZE] // SystemVerilog allows C-style declaration of array size
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:24:9
[94m   |
[94m24 |[37m   ( I.P p [SIZE] // SystemVerilog allows C-style declaration of array size
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:24:9
[94m   |
[94m24 |[37m   ( I.P p [SIZE] // SystemVerilog allows C-style declaration of array size
[94m   |[93m         ^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: generate_for_with_label
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:31:3
[94m   |
[94m31 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Use a label with prefix "l_" on loop generate block.
[94m   |[33m      [33m reason: Unnamed generate blocks imply unintuitive hierarchical paths.
(B[m
[91mFail[97m: keyword_required_generate
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:31:3
[94m   |
[94m31 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Use `generate`/`endgenerate` keywords to define generate regions.
[94m   |[33m      [33m reason: Omitting `generate`/`endgenerate` keywords may cause issues with non-compliant tools.
(B[m
[91mFail[97m: genvar_declaration_out_loop
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:31:8
[94m   |
[94m31 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m        ^^^^^^[93m hint  : Declare `genvar` outside the loop generate construct.
[94m   |[33m              [33m reason: Some tools don't support `genvar` declarations inside loop generate constructs.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:31:15
[94m   |
[94m31 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m               ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:40:1
[94m   |
[94m40 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:40:1
[94m   |
[94m40 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:40:1
[94m   |
[94m40 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: uppercamelcase_module
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:40:8
[94m   |
[94m40 |[37m module top
[94m   |[93m        ^^^[93m hint  : Begin `module` name with UpperCamelCase.
[94m   |[33m           [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:41:5
[94m   |
[94m41 |[37m   ( input  logic i_clk
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:41:18
[94m   |
[94m41 |[37m   ( input  logic i_clk
[94m   |[93m                  ^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:42:5
[94m   |
[94m42 |[37m   , output logic [SIZE-1:0] o_a
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:42:29
[94m   |
[94m42 |[37m   , output logic [SIZE-1:0] o_a
[94m   |[93m                             ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                                [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:43:5
[94m   |
[94m43 |[37m   , output logic [SIZE-1:0] o_b
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:43:29
[94m   |
[94m43 |[37m   , output logic [SIZE-1:0] o_b
[94m   |[93m                             ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                                [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:44:5
[94m   |
[94m44 |[37m   , output logic [SIZE-1:0] o_c
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:44:29
[94m   |
[94m44 |[37m   , output logic [SIZE-1:0] o_c
[94m   |[93m                             ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                                [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:47:3
[94m   |
[94m47 |[37m   I u_I [SIZE] (); 
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:47:5
[94m   |
[94m47 |[37m   I u_I [SIZE] (); 
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:47:5
[94m   |
[94m47 |[37m   I u_I [SIZE] (); 
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:48:0
[94m   |
[94m48 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:49:3
[94m   |
[94m49 |[37m   M u_M
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:49:5
[94m   |
[94m49 |[37m   M u_M
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:49:5
[94m   |
[94m49 |[37m   M u_M
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: generate_for_with_label
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:53:3
[94m   |
[94m53 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Use a label with prefix "l_" on loop generate block.
[94m   |[33m      [33m reason: Unnamed generate blocks imply unintuitive hierarchical paths.
(B[m
[91mFail[97m: keyword_required_generate
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:53:3
[94m   |
[94m53 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Use `generate`/`endgenerate` keywords to define generate regions.
[94m   |[33m      [33m reason: Omitting `generate`/`endgenerate` keywords may cause issues with non-compliant tools.
(B[m
[91mFail[97m: genvar_declaration_out_loop
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:53:8
[94m   |
[94m53 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m        ^^^^^^[93m hint  : Declare `genvar` outside the loop generate construct.
[94m   |[33m              [33m reason: Some tools don't support `genvar` declarations inside loop generate constructs.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayscomb_arrayofSVI_port_modport.sv:53:15
[94m   |
[94m53 |[37m   for (genvar i = 0; i < SIZE; i++) begin
[94m   |[93m               ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                [33m reason: Identifiers must conform to the naming scheme.
(B[m
FAILURE
