/* Generated by Yosys 0.27 (git sha1 5f88c218b, gcc 8.5.0 -fPIC -Os) */

(* interfaces_replaced_in_module =  1  *)
(* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:22.1-33.10" *)
module M1(a, b, c, \u_I.z , \u_I.y , \u_I.x , \u_I.$0\x[0:0] , \u_I.$0\y[0:0] , \u_I.$0\z[0:0] , \u_I.i_clk );
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:24.18-24.19" *)
  output a;
  wire a;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:25.18-25.19" *)
  output b;
  wire b;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:26.18-26.19" *)
  output c;
  wire c;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\x[0:0] ;
  wire \u_I.$0\x[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\y[0:0] ;
  wire \u_I.$0\y[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\z[0:0] ;
  wire \u_I.$0\z[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.i_clk ;
  wire \u_I.i_clk ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.x ;
  wire \u_I.x ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.y ;
  wire \u_I.y ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.z ;
  wire \u_I.z ;
  assign a = \u_I.z ;
  assign b = \u_I.y ;
  assign c = \u_I.x ;
endmodule

(* interfaces_replaced_in_module =  1  *)
(* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:36.1-51.10" *)
module M2(a, b, c, \u_I.z , \u_I.y , \u_I.x , \u_I.$0\x[0:0] , \u_I.$0\y[0:0] , \u_I.$0\z[0:0] , \u_I.i_clk );
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:38.18-38.19" *)
  output a;
  wire a;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:39.18-39.19" *)
  output b;
  wire b;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:40.18-40.19" *)
  output c;
  wire c;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\x[0:0] ;
  wire \u_I.$0\x[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\y[0:0] ;
  wire \u_I.$0\y[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\z[0:0] ;
  wire \u_I.$0\z[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.i_clk ;
  wire \u_I.i_clk ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.x ;
  wire \u_I.x ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.y ;
  wire \u_I.y ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.z ;
  wire \u_I.z ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:43.14-43.20" *)
  wire \u_M1.a ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:44.14-44.20" *)
  wire \u_M1.b ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:45.14-45.20" *)
  wire \u_M1.c ;
  (* module_not_derived = 32'd1 *)
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:47.6-49.6" *)
  M1 u_M1 (
    .a(a),
    .b(b),
    .c(c),
    .\u_I.$0\x[0:0] (\u_I.$0\x[0:0] ),
    .\u_I.$0\y[0:0] (\u_I.$0\y[0:0] ),
    .\u_I.$0\z[0:0] (\u_I.$0\z[0:0] ),
    .\u_I.i_clk (\u_I.i_clk ),
    .\u_I.x (\u_I.x ),
    .\u_I.y (\u_I.y ),
    .\u_I.z (\u_I.z )
  );
  assign \u_M1.a  = a;
  assign \u_M1.b  = b;
  assign \u_M1.c  = c;
endmodule

(* interfaces_replaced_in_module =  1  *)
(* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:54.1-69.10" *)
module \M3$interfaces$I (a, b, c, \u_I.z , \u_I.y , \u_I.x , \u_I.$0\x[0:0] , \u_I.$0\y[0:0] , \u_I.$0\z[0:0] , \u_I.i_clk );
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:56.18-56.19" *)
  output a;
  wire a;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:57.18-57.19" *)
  output b;
  wire b;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:58.18-58.19" *)
  output c;
  wire c;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\x[0:0] ;
  wire \u_I.$0\x[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\y[0:0] ;
  wire \u_I.$0\y[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.$0\z[0:0] ;
  wire \u_I.$0\z[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.i_clk ;
  wire \u_I.i_clk ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.x ;
  wire \u_I.x ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.y ;
  wire \u_I.y ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  inout \u_I.z ;
  wire \u_I.z ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:65.14-65.20" *)
  wire \u_M2.a ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:66.14-66.20" *)
  wire \u_M2.b ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:67.14-67.20" *)
  wire \u_M2.c ;
  (* module_not_derived = 32'd1 *)
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:61.6-63.6" *)
  M2 u_M2 (
    .a(a),
    .b(b),
    .c(c),
    .\u_I.$0\x[0:0] (\u_I.$0\x[0:0] ),
    .\u_I.$0\y[0:0] (\u_I.$0\y[0:0] ),
    .\u_I.$0\z[0:0] (\u_I.$0\z[0:0] ),
    .\u_I.i_clk (\u_I.i_clk ),
    .\u_I.x (\u_I.x ),
    .\u_I.y (\u_I.y ),
    .\u_I.z (\u_I.z )
  );
  assign \u_M2.a  = a;
  assign \u_M2.b  = b;
  assign \u_M2.c  = c;
endmodule

(* top =  1  *)
(* interfaces_replaced_in_module =  1  *)
(* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:72.1-92.10" *)
module top(i_clk, a, b, c);
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:74.18-74.19" *)
  output a;
  wire a;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:75.18-75.19" *)
  output b;
  wire b;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:76.18-76.19" *)
  output c;
  wire c;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:73.17-73.22" *)
  input i_clk;
  wire i_clk;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.$0\x[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.$0\y[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.$0\z[0:0] ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.i_clk ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.x ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.y ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire \u_I.z ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:88.14-88.20" *)
  wire \u_M3.a ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:89.14-89.20" *)
  wire \u_M3.b ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:90.14-90.20" *)
  wire \u_M3.c ;
  (* src = "testcases/alwaysff_misc_svi_hierachicalModuleRefInst.sv:83.6-86.6" *)
  \M3$interfaces$I  u_M3 (
    .a(a),
    .b(b),
    .c(c),
    .\u_I.$0\x[0:0] (\u_I.$0\x[0:0] ),
    .\u_I.$0\y[0:0] (\u_I.$0\y[0:0] ),
    .\u_I.$0\z[0:0] (\u_I.$0\z[0:0] ),
    .\u_I.i_clk (\u_I.i_clk ),
    .\u_I.x (\u_I.x ),
    .\u_I.y (\u_I.y ),
    .\u_I.z (\u_I.z )
  );
  assign \u_M3.a  = a;
  assign \u_M3.b  = b;
  assign \u_M3.c  = c;
endmodule
