/* Generated by Yosys 0.27 (git sha1 5f88c218b, gcc 8.5.0 -fPIC -Os) */

(* top =  1  *)
(* dynports =  1  *)
(* interfaces_replaced_in_module =  1  *)
(* src = "testcases/assign_arrayofSVI_port.sv:34.1-52.10" *)
module top(i_a, o_a, o_b);
  (* src = "testcases/assign_arrayofSVI_port.sv:35.17-35.20" *)
  input i_a;
  wire i_a;
  (* src = "testcases/assign_arrayofSVI_port.sv:36.29-36.32" *)
  output [7:0] o_a;
  wire [7:0] o_a;
  (* src = "testcases/assign_arrayofSVI_port.sv:37.29-37.32" *)
  output [7:0] o_b;
  wire [7:0] o_b;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[0].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[0].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[1].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[1].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[2].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[2].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[3].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[3].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[4].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[4].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[5].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[5].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[6].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[6].y ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[7].x ;
  (* src = "testcases/assign_arrayofSVI_port.sv:0.0-0.0" *)
  wire \u_I[7].y ;
  assign o_a = 8'hxx;
  assign o_b = 8'hxx;
  assign \u_I[0].x  = 1'hx;
  assign \u_I[0].y  = 1'hx;
  assign \u_I[1].x  = 1'hx;
  assign \u_I[1].y  = 1'hx;
  assign \u_I[2].x  = 1'hx;
  assign \u_I[2].y  = 1'hx;
  assign \u_I[3].x  = 1'hx;
  assign \u_I[3].y  = 1'hx;
  assign \u_I[4].x  = 1'hx;
  assign \u_I[4].y  = 1'hx;
  assign \u_I[5].x  = 1'hx;
  assign \u_I[5].y  = 1'hx;
  assign \u_I[6].x  = 1'hx;
  assign \u_I[6].y  = 1'hx;
  assign \u_I[7].x  = 1'hx;
  assign \u_I[7].y  = 1'hx;
endmodule
