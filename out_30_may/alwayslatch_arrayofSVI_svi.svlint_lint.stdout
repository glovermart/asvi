[93mWarning[97m: Config file '.svlint.toml' is not found. Enable all rules(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:4:1
[94m  |
[94m4 |[37m localparam int SIZE = 8;
[94m  |[93m ^^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m           [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: re_forbidden_localparam
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:4:16
[94m  |
[94m4 |[37m localparam int SIZE = 8;
[94m  |[93m                ^^^^[93m hint  : Use a localparam identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m                    [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:7:1
[94m  |
[94m7 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m          [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:7:1
[94m  |
[94m7 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Prefix `interface` identifier with "ifc_".
[94m  |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:7:1
[94m  |
[94m7 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:7:1
[94m  |
[94m7 |[37m interface I
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:7:11
[94m  |
[94m7 |[37m interface I
[94m  |[93m           ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m  |[33m            [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:8:5
[94m  |
[94m8 |[37m   ( input logic i_arst
[94m  |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m  |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:8:17
[94m  |
[94m8 |[37m   ( input logic i_arst
[94m  |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:9:5
[94m  |
[94m9 |[37m   , input logic en
[94m  |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m  |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: prefix_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:9:5
[94m  |
[94m9 |[37m   , input logic en
[94m  |[93m     ^^^^^[93m hint  : Prefix `input` port identifier with "i_".
[94m  |[33m          [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:9:17
[94m  |
[94m9 |[37m   , input logic en
[94m  |[93m                 ^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:10:5
[94m   |
[94m10 |[37m   , input logic i_a
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:10:17
[94m   |
[94m10 |[37m   , input logic i_a
[94m   |[93m                 ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                    [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:11:5
[94m   |
[94m11 |[37m   , output logic o_a
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:11:18
[94m   |
[94m11 |[37m   , output logic o_a
[94m   |[93m                  ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                     [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:12:5
[94m   |
[94m12 |[37m   , output logic o_b
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:12:18
[94m   |
[94m12 |[37m   , output logic o_b
[94m   |[93m                  ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                     [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:19:0
[94m   |
[94m19 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: explicit_if_else
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:21:5
[94m   |
[94m21 |[37m     if (!i_arst)
[94m   |[93m     ^^[93m hint  : Add an `else` clause to the `if` statement.
[94m   |[33m       [33m reason: Fully-specified conditional clarifies design intent.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:21:5
[94m   |
[94m21 |[37m     if (!i_arst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:28:0
[94m   |
[94m28 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:32:1
[94m   |
[94m32 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:32:1
[94m   |
[94m32 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:32:1
[94m   |
[94m32 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:32:1
[94m   |
[94m32 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:32:8
[94m   |
[94m32 |[37m module M
[94m   |[93m        ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m         [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: interface_port_with_modport
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:33:5
[94m   |
[94m33 |[37m   ( I u_I [SIZE-1:0]
[94m   |[93m     ^[93m hint  : Specify the modport on the interface port.
[94m   |[33m      [33m reason: Without a modport, the interface port signals are all implictly `inout`.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:33:5
[94m   |
[94m33 |[37m   ( I u_I [SIZE-1:0]
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:33:7
[94m   |
[94m33 |[37m   ( I u_I [SIZE-1:0]
[94m   |[93m       ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:33:7
[94m   |
[94m33 |[37m   ( I u_I [SIZE-1:0]
[94m   |[93m       ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_port_inout
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:33:7
[94m   |
[94m33 |[37m   ( I u_I [SIZE-1:0]
[94m   |[93m       ^^^[93m hint  : Use a port identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_port_interface
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:33:7
[94m   |
[94m33 |[37m   ( I u_I [SIZE-1:0]
[94m   |[93m       ^^^[93m hint  : Use a port identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:35:0
[94m   |
[94m35 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:37:0
[94m   |
[94m37 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: generate_for_with_label
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:38:3
[94m   |
[94m38 |[37m   for(genvar i=0; i < SIZE; i++)
[94m   |[93m   ^^^[93m hint  : Use a label with prefix "l_" on loop generate block.
[94m   |[33m      [33m reason: Unnamed generate blocks imply unintuitive hierarchical paths.
(B[m
[91mFail[97m: keyword_required_generate
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:38:3
[94m   |
[94m38 |[37m   for(genvar i=0; i < SIZE; i++)
[94m   |[93m   ^^^[93m hint  : Use `generate`/`endgenerate` keywords to define generate regions.
[94m   |[33m      [33m reason: Omitting `generate`/`endgenerate` keywords may cause issues with non-compliant tools.
(B[m
[91mFail[97m: style_keyword_1space
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:38:3
[94m   |
[94m38 |[37m   for(genvar i=0; i < SIZE; i++)
[94m   |[93m   ^^^[93m hint  : Follow keyword with exactly 1 space.
[94m   |[33m      [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: genvar_declaration_out_loop
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:38:7
[94m   |
[94m38 |[37m   for(genvar i=0; i < SIZE; i++)
[94m   |[93m       ^^^^^^[93m hint  : Declare `genvar` outside the loop generate construct.
[94m   |[33m             [33m reason: Some tools don't support `genvar` declarations inside loop generate constructs.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:38:14
[94m   |
[94m38 |[37m   for(genvar i=0; i < SIZE; i++)
[94m   |[93m              ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m               [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_indent
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:40:0
[94m   |
[94m40 |[37m 
[94m   |[93m [93m hint  : Follow each newline with an integer multiple of 2 spaces.
[94m   |[33m [33m reason: Consistent indentation is essential for readability.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:40:0
[94m   |
[94m40 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:44:1
[94m   |
[94m44 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:44:1
[94m   |
[94m44 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:44:1
[94m   |
[94m44 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: uppercamelcase_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:44:8
[94m   |
[94m44 |[37m module top
[94m   |[93m        ^^^[93m hint  : Begin `module` name with UpperCamelCase.
[94m   |[33m           [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:45:5
[94m   |
[94m45 |[37m   ( input logic i_arst
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:45:17
[94m   |
[94m45 |[37m   ( input logic i_arst
[94m   |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:46:5
[94m   |
[94m46 |[37m   , input logic en
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: prefix_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:46:5
[94m   |
[94m46 |[37m   , input logic en
[94m   |[93m     ^^^^^[93m hint  : Prefix `input` port identifier with "i_".
[94m   |[33m          [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:46:17
[94m   |
[94m46 |[37m   , input logic en
[94m   |[93m                 ^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:47:5
[94m   |
[94m47 |[37m   , input logic i_a
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:47:17
[94m   |
[94m47 |[37m   , input logic i_a
[94m   |[93m                 ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                    [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:48:5
[94m   |
[94m48 |[37m   , output logic [SIZE-1:0] o_a
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:48:29
[94m   |
[94m48 |[37m   , output logic [SIZE-1:0] o_a
[94m   |[93m                             ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                                [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:49:5
[94m   |
[94m49 |[37m   , output logic [SIZE-1:0] o_b
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:49:29
[94m   |
[94m49 |[37m   , output logic [SIZE-1:0] o_b
[94m   |[93m                             ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                                [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:51:0
[94m   |
[94m51 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:52:3
[94m   |
[94m52 |[37m   I u_I [SIZE-1:0]
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:52:5
[94m   |
[94m52 |[37m   I u_I [SIZE-1:0]
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:52:5
[94m   |
[94m52 |[37m   I u_I [SIZE-1:0]
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:57:0
[94m   |
[94m57 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: generate_for_with_label
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:59:3
[94m   |
[94m59 |[37m   for(genvar i = 0; i < SIZE; i++)
[94m   |[93m   ^^^[93m hint  : Use a label with prefix "l_" on loop generate block.
[94m   |[33m      [33m reason: Unnamed generate blocks imply unintuitive hierarchical paths.
(B[m
[91mFail[97m: keyword_required_generate
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:59:3
[94m   |
[94m59 |[37m   for(genvar i = 0; i < SIZE; i++)
[94m   |[93m   ^^^[93m hint  : Use `generate`/`endgenerate` keywords to define generate regions.
[94m   |[33m      [33m reason: Omitting `generate`/`endgenerate` keywords may cause issues with non-compliant tools.
(B[m
[91mFail[97m: style_keyword_1space
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:59:3
[94m   |
[94m59 |[37m   for(genvar i = 0; i < SIZE; i++)
[94m   |[93m   ^^^[93m hint  : Follow keyword with exactly 1 space.
[94m   |[33m      [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: genvar_declaration_out_loop
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:59:7
[94m   |
[94m59 |[37m   for(genvar i = 0; i < SIZE; i++)
[94m   |[93m       ^^^^^^[93m hint  : Declare `genvar` outside the loop generate construct.
[94m   |[33m             [33m reason: Some tools don't support `genvar` declarations inside loop generate constructs.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:59:14
[94m   |
[94m59 |[37m   for(genvar i = 0; i < SIZE; i++)
[94m   |[93m              ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m               [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:60:3
[94m   |
[94m60 |[37m   M u_M 
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:60:5
[94m   |
[94m60 |[37m   M u_M 
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:60:5
[94m   |
[94m60 |[37m   M u_M 
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:61:0
[94m   |
[94m61 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:63:0
[94m   |
[94m63 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: generate_for_with_label
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:64:3
[94m   |
[94m64 |[37m   for(genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Use a label with prefix "l_" on loop generate block.
[94m   |[33m      [33m reason: Unnamed generate blocks imply unintuitive hierarchical paths.
(B[m
[91mFail[97m: keyword_required_generate
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:64:3
[94m   |
[94m64 |[37m   for(genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Use `generate`/`endgenerate` keywords to define generate regions.
[94m   |[33m      [33m reason: Omitting `generate`/`endgenerate` keywords may cause issues with non-compliant tools.
(B[m
[91mFail[97m: style_keyword_1space
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:64:3
[94m   |
[94m64 |[37m   for(genvar i = 0; i < SIZE; i++) begin
[94m   |[93m   ^^^[93m hint  : Follow keyword with exactly 1 space.
[94m   |[33m      [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: genvar_declaration_out_loop
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:64:7
[94m   |
[94m64 |[37m   for(genvar i = 0; i < SIZE; i++) begin
[94m   |[93m       ^^^^^^[93m hint  : Declare `genvar` outside the loop generate construct.
[94m   |[33m             [33m reason: Some tools don't support `genvar` declarations inside loop generate constructs.
(B[m
[91mFail[97m: re_forbidden_genvar
[94m   -->[37m testcases/alwayslatch_arrayofSVI_svi.sv:64:14
[94m   |
[94m64 |[37m   for(genvar i = 0; i < SIZE; i++) begin
[94m   |[93m              ^[93m hint  : Use a genvar identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m               [33m reason: Identifiers must conform to the naming scheme.
(B[m
FAILURE
