[93mWarning[97m: Config file '.svlint.toml' is not found. Enable all rules(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:5:1
[94m  |
[94m5 |[37m interface I(input var logic i_srst);
[94m  |[93m ^^^^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m  |[33m          [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:5:1
[94m  |
[94m5 |[37m interface I(input var logic i_srst);
[94m  |[93m ^^^^^^^^^[93m hint  : Prefix `interface` identifier with "ifc_".
[94m  |[33m          [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:5:1
[94m  |
[94m5 |[37m interface I(input var logic i_srst);
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:5:1
[94m  |
[94m5 |[37m interface I(input var logic i_srst);
[94m  |[93m ^^^^^^^^^[93m hint  : Use a interface identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m  |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:5:11
[94m  |
[94m5 |[37m interface I(input var logic i_srst);
[94m  |[93m           ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m  |[33m            [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:5:29
[94m  |
[94m5 |[37m interface I(input var logic i_srst);
[94m  |[93m                             ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m  |[33m                                   [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: keyword_forbidden_wire_reg
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:8:3
[94m  |
[94m8 |[37m   wire y;
[94m  |[93m   ^^^^[93m hint  : Replace `wire` or `reg` keywords with `logic`, `tri` and/or `var`.
[94m  |[33m       [33m reason: Explicit datatype `logic` and/or datakind `var`/`tri` better describes intent.
(B[m
[91mFail[97m: keyword_forbidden_wire_reg
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:9:3
[94m  |
[94m9 |[37m   wire x;
[94m  |[93m   ^^^^[93m hint  : Replace `wire` or `reg` keywords with `logic`, `tri` and/or `var`.
[94m  |[33m       [33m reason: Explicit datatype `logic` and/or datakind `var`/`tri` better describes intent.
(B[m
[91mFail[97m: style_keyword_construct
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:11:3
[94m   |
[94m11 |[37m   always_comb 
[94m   |[93m   ^^^^^^^^^^^[93m hint  : Follow keyword with a newline or exactly 1 space.
[94m   |[33m              [33m reason: Consistent use of whitespace enhances readability by reducing visual noise.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:12:0
[94m   |
[94m12 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:17:1
[94m   |
[94m17 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:17:1
[94m   |
[94m17 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:17:1
[94m   |
[94m17 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_module_ansi
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:17:1
[94m   |
[94m17 |[37m module M
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier matching regex `^[a-z]+[a-zA-Z0-9_]*$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:17:8
[94m   |
[94m17 |[37m module M
[94m   |[93m        ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m         [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: interface_port_with_modport
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:18:5
[94m   |
[94m18 |[37m   ( I u_I
[94m   |[93m     ^[93m hint  : Specify the modport on the interface port.
[94m   |[33m      [33m reason: Without a modport, the interface port signals are all implictly `inout`.
(B[m
[91mFail[97m: lowercamelcase_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:18:5
[94m   |
[94m18 |[37m   ( I u_I
[94m   |[93m     ^[93m hint  : Begin `interface` name with lowerCamelCase.
[94m   |[33m      [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_port_inout
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:18:7
[94m   |
[94m18 |[37m   ( I u_I
[94m   |[93m       ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_forbidden_port_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:18:7
[94m   |
[94m18 |[37m   ( I u_I
[94m   |[93m       ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_port_inout
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:18:7
[94m   |
[94m18 |[37m   ( I u_I
[94m   |[93m       ^^^[93m hint  : Use a port identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_port_interface
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:18:7
[94m   |
[94m18 |[37m   ( I u_I
[94m   |[93m       ^^^[93m hint  : Use a port identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m          [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:19:5
[94m   |
[94m19 |[37m   , output logic o_a
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:19:18
[94m   |
[94m19 |[37m   , output logic o_a
[94m   |[93m                  ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                     [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: default_nettype_none
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:34:1
[94m   |
[94m34 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Place `` `default_nettype none`` at the top of source code.
[94m   |[33m       [33m reason: Compiler directive `` `default_nettype none`` detects unintentional implicit wires.
(B[m
[91mFail[97m: prefix_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:34:1
[94m   |
[94m34 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Prefix `module` identifier with "mod_".
[94m   |[33m       [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_module_ansi
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:34:1
[94m   |
[94m34 |[37m module top
[94m   |[93m ^^^^^^[93m hint  : Use a module identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: uppercamelcase_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:34:8
[94m   |
[94m34 |[37m module top
[94m   |[93m        ^^^[93m hint  : Begin `module` name with UpperCamelCase.
[94m   |[33m           [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: input_with_var
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:35:5
[94m   |
[94m35 |[37m   ( input logic i_sclk
[94m   |[93m     ^^^^^[93m hint  : Specify `var` datakind on `input` ports.
[94m   |[33m          [33m reason: Default datakind of input port is a tri-state net.
(B[m
[91mFail[97m: re_forbidden_port_input
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:35:17
[94m   |
[94m35 |[37m   ( input logic i_sclk
[94m   |[93m                 ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                       [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:36:5
[94m   |
[94m36 |[37m   , output logic o_a
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:36:18
[94m   |
[94m36 |[37m   , output logic o_a
[94m   |[93m                  ^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                     [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: output_with_var
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:37:5
[94m   |
[94m37 |[37m   , output logic i_srst
[94m   |[93m     ^^^^^^[93m hint  : Specify `var` datakind on `output` ports.
[94m   |[33m           [33m reason: Explicit datakind of output ports should be consistent with input ports.
(B[m
[91mFail[97m: prefix_output
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:37:5
[94m   |
[94m37 |[37m   , output logic i_srst
[94m   |[93m     ^^^^^^[93m hint  : Prefix `output` port identifier with "o_".
[94m   |[33m           [33m reason: Port prefixes help readers to follow signals through modules.
(B[m
[91mFail[97m: re_forbidden_port_output
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:37:18
[94m   |
[94m37 |[37m   , output logic i_srst
[94m   |[93m                  ^^^^^^[93m hint  : Use a port identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m                        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:40:3
[94m   |
[94m40 |[37m   I u_I
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:40:5
[94m   |
[94m40 |[37m   I u_I
[94m   |[93m     ^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:40:5
[94m   |
[94m40 |[37m   I u_I
[94m   |[93m     ^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m        [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:44:3
[94m   |
[94m44 |[37m   M u_M1 
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:44:5
[94m   |
[94m44 |[37m   M u_M1 
[94m   |[93m     ^^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m         [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:44:5
[94m   |
[94m44 |[37m   M u_M1 
[94m   |[93m     ^^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m         [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:45:0
[94m   |
[94m45 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: lowercamelcase_module
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:48:3
[94m   |
[94m48 |[37m   M u_M2 
[94m   |[93m   ^[93m hint  : Begin `module` name with lowerCamelCase.
[94m   |[33m    [33m reason: Naming convention simplifies audit.
(B[m
[91mFail[97m: re_forbidden_instance
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:48:5
[94m   |
[94m48 |[37m   M u_M2 
[94m   |[93m     ^^^^[93m hint  : Use an instance identifier not matching regex `^[^X](UNCONFIGURED|.*)$`.
[94m   |[33m         [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: re_required_instance
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:48:5
[94m   |
[94m48 |[37m   M u_M2 
[94m   |[93m     ^^^^[93m hint  : Use an instance identifier matching regex `^[a-z]+[a-z0-9_]*$`.
[94m   |[33m         [33m reason: Identifiers must conform to the naming scheme.
(B[m
[91mFail[97m: style_trailingwhitespace
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:49:0
[94m   |
[94m49 |[37m 
[94m   |[93m [93m hint  : Remove trailing whitespace.
[94m   |[33m [33m reason: Trailing whitespace leads to unnecessary awkwardness with version control.
(B[m
[91mFail[97m: sequential_block_in_always_ff
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:55:31
[94m   |
[94m55 |[37m   always_ff @(posedge i_sclk) begin
[94m   |[93m                               ^^^^^[93m hint  : Keywords `begin` and `end` are forbidden within `always_ff`.
[94m   |[33m                                    [33m reason: Sequential blocks within `always_ff` may encourage overly-complex code.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:56:5
[94m   |
[94m56 |[37m     if (i_srst)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
[91mFail[97m: explicit_if_else
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:60:5
[94m   |
[94m60 |[37m     if (counter == 4'hF)
[94m   |[93m     ^^[93m hint  : Add an `else` clause to the `if` statement.
[94m   |[33m       [33m reason: Fully-specified conditional clarifies design intent.
(B[m
[91mFail[97m: multiline_if_begin
[94m   -->[37m testcases/force_misc_svi_assign_wire.sv:60:5
[94m   |
[94m60 |[37m     if (counter == 4'hF)
[94m   |[93m     ^^[93m hint  : Add `begin`/`end` around multi-line `if` statement.
[94m   |[33m       [33m reason: Without `begin`/`end`, the conditional statement may be confusing.
(B[m
FAILURE
