  top u_DUT();
          |
xmelab: *W,CUVWSP (./testbench/tb.sv,3|10): 1 output port was not connected:
xmelab: (./testcases/alwaysff_packed_nomodport_sequential.sv,14): o_a

  top u_DUT();
          |
xmelab: *W,CUVWSI (./testbench/tb.sv,3|10): 2 input ports were not connected:
xmelab: (./testcases/alwaysff_packed_nomodport_sequential.sv,12): i_a
xmelab: (./testcases/alwaysff_packed_nomodport_sequential.sv,13): i_clk

xmelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
  always_ff @(posedge i_clk) begin // Introduce sequential block; begin...end. 
          |
xmelab: *E,MULAXX (./testcases/alwaysff_packed_nomodport_sequential.sv,21|10): Multiple drivers to always_ff output variable i detected.
FAILURE
